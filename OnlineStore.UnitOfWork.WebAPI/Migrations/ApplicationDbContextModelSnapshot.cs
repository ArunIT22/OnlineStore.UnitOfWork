// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineStore.UnitOfWork.WebAPI.Models;

#nullable disable

namespace OnlineStore.UnitOfWork.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OnlineStore.UnitOfWork.WebAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "HomeApplicances"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Mobiles"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Books"
                        });
                });

            modelBuilder.Entity("OnlineStore.UnitOfWork.WebAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValueSql("0");

                    b.Property<decimal>("ListPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(2023, 3, 15, 10, 2, 34, 801, DateTimeKind.Local).AddTicks(8043),
                            CategoryId = 1,
                            Discount = 5f,
                            ListPrice = 55000.50m,
                            ProductName = "Sony Television",
                            SellingPrice = 51000m
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(2023, 3, 13, 10, 2, 34, 801, DateTimeKind.Local).AddTicks(8045),
                            CategoryId = 1,
                            Discount = 5f,
                            ListPrice = 45000.50m,
                            ProductName = "LG Television",
                            SellingPrice = 41000m
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(2023, 3, 15, 10, 2, 34, 801, DateTimeKind.Local).AddTicks(8063),
                            CategoryId = 2,
                            Discount = 5f,
                            ListPrice = 85000.50m,
                            ProductName = "iPhone14",
                            SellingPrice = 80000m
                        },
                        new
                        {
                            Id = 4,
                            AddedDate = new DateTime(2023, 3, 15, 10, 2, 34, 801, DateTimeKind.Local).AddTicks(8065),
                            CategoryId = 2,
                            Discount = 4f,
                            ListPrice = 25000.50m,
                            ProductName = "Samsung M33",
                            SellingPrice = 22000m
                        },
                        new
                        {
                            Id = 5,
                            AddedDate = new DateTime(2023, 3, 15, 10, 2, 34, 801, DateTimeKind.Local).AddTicks(8066),
                            CategoryId = 3,
                            Discount = 5f,
                            ListPrice = 2599m,
                            ProductName = "Levis Jeans",
                            SellingPrice = 2199m
                        },
                        new
                        {
                            Id = 6,
                            AddedDate = new DateTime(2023, 3, 15, 10, 2, 34, 801, DateTimeKind.Local).AddTicks(8067),
                            CategoryId = 3,
                            Discount = 5f,
                            ListPrice = 950m,
                            ProductName = "Shirt",
                            SellingPrice = 900m
                        },
                        new
                        {
                            Id = 7,
                            AddedDate = new DateTime(2023, 3, 15, 10, 2, 34, 801, DateTimeKind.Local).AddTicks(8068),
                            CategoryId = 4,
                            Discount = 10f,
                            ListPrice = 259m,
                            ProductName = "Ruskin Bonds",
                            SellingPrice = 209m
                        });
                });

            modelBuilder.Entity("OnlineStore.UnitOfWork.WebAPI.Models.Product", b =>
                {
                    b.HasOne("OnlineStore.UnitOfWork.WebAPI.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
